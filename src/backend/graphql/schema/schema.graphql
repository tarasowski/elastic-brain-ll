type AllCourses {
	items: [CourseList]
	nextToken: String
}

type CourseList {
	courses: [SingleCourse]
}

type Mutation {
	addNewCourse(name: String!, id: String!): MyCourseList
	addNewCard(input: CardInfo): String
}


input CourseInfo {
	courseId: String!
	courseName: String!
}



input CardInfo {
	questionId: String!
	question: String!
	answer: String!
	date: String!
	course: CourseInfo!
}


type MyCourseList {
	userId: String!
	courses: [SingleCourse]
}

type Query {
	getAllCourses: AllCourses
	getSpecificCourseCards(courseId: String!): SpecificCourseCards
}

type SpecificCourseCards {
	items: [String]
	nextToken: String
}

type SingleCourse {
	name: String!
	id: String!
}

schema {
	query: Query
	mutation: Mutation
}